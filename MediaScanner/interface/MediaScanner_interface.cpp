/*
 * WARNING: this is an autogenerated file and will be overwritten by
 * the extension interface script.
 */

#include "s3eExt.h"
#include "IwDebug.h"

#include "MediaScanner.h"

/**
 * Definitions for functions types passed to/from s3eExt interface
 */
typedef       void(*Scan_t)(const char* filepath, const char* mime_type);

/**
 * struct that gets filled in by MediaScannerRegister
 */
typedef struct MediaScannerFuncs
{
    Scan_t m_Scan;
} MediaScannerFuncs;

static MediaScannerFuncs g_Ext;
static bool g_GotExt = false;
static bool g_TriedExt = false;
static bool g_TriedNoMsgExt = false;

static bool _extLoad()
{
    if (!g_GotExt && !g_TriedExt)
    {
        s3eResult res = s3eExtGetHash(0x306339ef, &g_Ext, sizeof(g_Ext));
        if (res == S3E_RESULT_SUCCESS)
            g_GotExt = true;
        else
            s3eDebugAssertShow(S3E_MESSAGE_CONTINUE_STOP_IGNORE, "error loading extension: MediaScanner");
        g_TriedExt = true;
        g_TriedNoMsgExt = true;
    }

    return g_GotExt;
}

static bool _extLoadNoMsg()
{
    if (!g_GotExt && !g_TriedNoMsgExt)
    {
        s3eResult res = s3eExtGetHash(0x306339ef, &g_Ext, sizeof(g_Ext));
        if (res == S3E_RESULT_SUCCESS)
            g_GotExt = true;
        g_TriedNoMsgExt = true;
        if (g_TriedExt)
            g_TriedExt = true;
    }

    return g_GotExt;
}

s3eBool MediaScannerAvailable()
{
    _extLoadNoMsg();
    return g_GotExt ? S3E_TRUE : S3E_FALSE;
}

void Scan(const char* filepath, const char* mime_type)
{
    IwTrace(MEDIASCANNER_VERBOSE, ("calling MediaScanner[0] func: Scan"));

    if (!_extLoad())
        return;

    g_Ext.m_Scan(filepath, mime_type);
}
